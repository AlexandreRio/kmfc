char* parseStr(struct jsonparse_state *state);

typedef void (*fptrSetter)(struct jsonparse_state *state, void* object, TYPE obj_type, TYPE ptr_type);

struct at {
	char* attr_name;
	fptrSetter setter; // fptr to parse result from json
	TYPE obj_type; // NULL if primitive
	TYPE ptr_type;
};

struct ClassType {
	TYPE type;
	int nb_attributes;
	struct at* attributes;
};

const struct ClassType getClass(TYPE type);

//typedef char* (*fptrParseStr)(struct jsonparse_state*);
//typedef void (*fptrParser)(struct jsonparse_state*, fptrSetter*);

typedef void* (*fptrConstruct)();

fptrSetter getSetterFunc(struct ClassType ctype, char* name);

void parseObject(struct jsonparse_state *state, void* o, TYPE obj_type, TYPE ptr_type);
void parseArray(struct jsonparse_state *state, void* o, TYPE obj_type, TYPE ptr_type);
