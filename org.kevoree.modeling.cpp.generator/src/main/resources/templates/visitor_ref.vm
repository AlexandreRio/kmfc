#* @vtlvariable name="type" type="java.lang.String" *#
#* @vtlvariable name="refname" type="java.lang.String" *#
#* @vtlvariable name="debug" type="java.lang.String" *#

visitor->beginVisitRef("${refname}","org.kevoree.${type}");
for ( std::map<string,${type}*>::iterator it = ${refname}.begin();  it != ${refname}.end(); ++it)
{
    ${type} * current =(${type}*) it->second;
    ${debug}
    internal_visit(visitor,current,recursive,containedReference,nonContainedReference,"${refname}");
}
visitor->endVisitRef("${refname}");